#!/bin/bash

# SPDX-FileCopyrightText: 2023 - 2023 ENCRYPTED SUPPORT LP <adrelanos@kicksecure.com>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

## image is required to include the live-boot package already

## TODO: port to squashfs-tools-ng? faster? smaller?

set -x
set -e
set -o pipefail

if [ ! "$(id -u)" = "0" ]; then
   true "ERROR: Must be run with root (sudo)! sudo $0" >&2
   exit 1
fi

command -v mksquashfs >/dev/null
command -v grub-mkrescue >/dev/null
command -v xorriso >/dev/null

## grub-mkrescue undocumented dependencies
apt install --no-install-recommends grub-efi-amd64-bin grub-efi-amd64-signed mtools

IMAGE_FILE="/home/$SUDO_USER/grml-debootstraptestbin/test.img"
ISO_TMP_DIR="/home/$SUDO_USER/grml-debootstraptestbin/iso_tmp"
ISO_IMAGE_FILE="/home/$SUDO_USER/grml-debootstraptestbin/output.iso"

#grml-debootstrap -t "$IMAGE_FILE" --vmfile --vmefi --vmsize 3G

true "Mounting..."
DEVINFO=$(kpartx -asv "$IMAGE_FILE")
if [ -z "${DEVINFO}" ] ; then
    echo "Error setting up loopback device." >&2
    exit 1
fi

LOOP_PART="${DEVINFO##add map }"
LOOP_PART="${LOOP_PART// */}"
EFI_TARGET="/dev/mapper/$LOOP_PART"
LOOP_PART="${LOOP_PART%p1}p3"
TARGET="/dev/mapper/$LOOP_PART"
MNTPOINT=$(mktemp -d)

mount "$TARGET" "$MNTPOINT"
mount "$EFI_TARGET" "${MNTPOINT}"/boot/efi

true "Preparing ISO..."

mkdir -p "${ISO_TMP_DIR}/LiveOS"
mkdir -p "${ISO_TMP_DIR}/boot/grub"

KVERSION=$(cd "$MNTPOINT"/boot && find vmlinuz-* | tail -1 | sed 's@vmlinuz-@@')

cp -a "${MNTPOINT}"/boot/vmlinuz-"${KVERSION}" "${ISO_TMP_DIR}"/LiveOS/vmlinuz
cp -a "${MNTPOINT}"/boot/initrd.img-"${KVERSION}" "${ISO_TMP_DIR}"/LiveOS/initrd.img

## /LiveOS/squashfs.img is a dracut default.
##
## During development when testing different kernel boot parameters it is probably
## unnecessary to re-create the squashfs over and over again.
mksquashfs "${MNTPOINT}" "${ISO_TMP_DIR}/LiveOS"/squashfs.img -noappend

## Fedora 39 example:
## linux /images/pxeboot/vmlinuz root=live:CDLABEL=Fedora-WS-Live-39-1-5  rd.live.image quiet rhgb

cat << EOF > "${ISO_TMP_DIR}"/boot/grub/grub.cfg
set default="0"
set timeout=10

menuentry "Linux" {
    linux /LiveOS/vmlinuz root=live:CDLABEL=test rd.live.image rd.debug rd.live.debug rd.live.overlay.overlayfs=1 console=ttyS0
    initrd /LiveOS/initrd.img
}


menuentry "Linux in safe mode" {
    linux /live/vmlinuz boot=live xforcevesa root=(live)
    initrd /live/initrd.img
}

EOF

true "Creating ISO..."

## '-V test' set label to 'test'. This must match the 'root=live:CDLABEL=test' kernel command line.
grub-mkrescue --verbose -V test -o "$ISO_IMAGE_FILE" "$ISO_TMP_DIR"

true "Unmounting..."

umount "${MNTPOINT}"/boot/efi
umount "${MNTPOINT}"
kpartx -d "${TARGET}"

rmdir "${MNTPOINT}"
#rm "$IMAGE_FILE"
rm -r "$ISO_TMP_DIR"

true "Done."
